tools:
  jdk:
    - 1.8
  maven:
    - 3.6.0
  sonarscanner:
    - 3.0.3.778

triggers:
  - manual:
      name: Release Image
      call: release


envs:
  global:
    variables:
      MAVEN_VERSION: ''
      MAVEN_GROUP_ID: ''
      MAVEN_ARTIFACT_ID: ''
      GIT_REVISION: ''
      devAcrName: 'apfsregistrydev.azurecr.io' #here goes your container registry name
      devAcrCred: '94794fdf-af70-4ef2-b1e6-f86a18800749'

flows:
  default:
    - shell: echo "build_push_latest_img_dev"
    - call: readpom
    - mvn clean install -DskipTests
    - call: build_push_latest_img_dev
  pr:
    - mvn clean package

  build_push_latest_img_dev:
    - shell: echo "build_push_latest_img_dev"
    - shell: echo "${devAcrName}/${MAVEN_ARTIFACT_ID}:${MAVEN_VERSION}"
    - node(docker-daemon):
        - dockerImage:
            tags:
              - '${devAcrName}/${MAVEN_ARTIFACT_ID}:${MAVEN_VERSION}'
            push: true
            dockerfile: 'Dockerfile'
            creds:
              apfsregistrydev.azurecr.io: '${devAcrCred}'
              apfsregistryrelease.azurecr.io: '${releaseAcrCred}'

  build_img_dev:
    - shell: echo "build_img_dev"
    - node(docker-daemon):
        - dockerImage:
            tags:
              - '${devAcrName}/${MAVEN_ARTIFACT_ID}:${MAVEN_VERSION}'
            push: false
            dockerfile: 'Dockerfile'
            creds:
              apfsregistrydev.azurecr.io: '${devAcrCred}'
  Build-Deploy-Dev:
    try:
      - dir(sourcecode):
          - call: readpom
          - mvn clean -U javadoc:javadoc jacoco:prepare-agent install deploy -Dcodecoveragelimit=0.69 -Dgit-revision=$GIT_COMMIT
          - call: build_push_latest_img_dev
          - call: runsonar
    finally:
      - call: hygieiaPublish
  Build--Deploy-Proximity:
    try:
      - dir(sourcecode):
          - call: readpom
          - mvn clean -U javadoc:javadoc jacoco:prepare-agent install deploy -Dcodecoveragelimit=0.70
          - call: runsonar
    finally:
      - call: hygieiaPublish
  Build--Release-Proximity:
    try:
      - dir(sourcecode):
          - call: readpom
          - mvn -U versions:display-property-updates versions:update-properties versions:commit -Dmessage='updating the dependencies' scm:checkin
          - mvn --batch-mode -Darguments='-Dcodecoveragelimit=0.70' release:prepare release:perform -DscmCommentPrefix='INTARS ' -Dcodecoveragelimit=0.70 -Dgoals=jacoco:prepare-agent,deploy
          - call: runsonar
    finally:
      - call: hygieiaPublish
  Build--Docker-Image:
    try:
      - dir(sourcecode):
          - call: readpom
          - call: build_push_latest_img_dev
    finally:
      - call: hygieiaPublish
  Build-Release:
    try:
      - dir(sourcecode):
          - call: readpom
          - mvn -U versions:display-property-updates versions:update-properties versions:commit -Dmessage='updating the dependencies' scm:checkin
          - mvn --batch-mode -Darguments='-Dcodecoveragelimit=0.70' release:prepare release:perform -DscmCommentPrefix='INTARS ' -Dcodecoveragelimit=0.70 -Dgoals=jacoco:prepare-agent,deploy
          - call: runsonar
          - call: build_push_latest_img_release
    finally:
      - call: hygieiaPublish
  runsonar:
    - sonar("Sonar"):
        - (name sonar) sonar-scanner -Dproject.settings=sonar-project.properties
        - hygieia.publishSonar()
  hygieiaPublish:
    - hygieia.publishBuild()
  readpom:
    - exposeVars(maven)
    - echo "MAVEN_VERSION=${MAVEN_VERSION}"
    - echo "MAVEN_GROUP_ID=${MAVEN_GROUP_ID}"
    - echo "MAVEN_ARTIFACT_ID=${MAVEN_ARTIFACT_ID}"
    - echo "GIT_REVISION=${git-revision}"
